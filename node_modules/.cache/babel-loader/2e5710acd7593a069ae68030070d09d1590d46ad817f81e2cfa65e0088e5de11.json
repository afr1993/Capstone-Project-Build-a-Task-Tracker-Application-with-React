{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afr19\\\\Downloads\\\\task-tracker-app\\\\src\\\\pages\\\\EditTask.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { TaskContext } from '../context/TaskContext';\nimport TaskForm from '../components/TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTask = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    tasks,\n    updateTask\n  } = useContext(TaskContext);\n  const navigate = useNavigate();\n  const task = tasks.find(t => t.id === id);\n  if (!task) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Tarea no encontrada\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }, this);\n  const handleUpdate = updatedData => {\n    updateTask({\n      ...task,\n      ...updatedData\n    });\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Editar Tarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      initialTask: task,\n      onSubmit: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(EditTask, \"d1ehhz/B3H7jBgCU0yz2umrW17E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditTask;\nexport default EditTask;\nvar _c;\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["React","useContext","useParams","useNavigate","TaskContext","TaskForm","jsxDEV","_jsxDEV","EditTask","_s","id","tasks","updateTask","navigate","task","find","t","children","fileName","_jsxFileName","lineNumber","columnNumber","handleUpdate","updatedData","initialTask","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/afr19/Downloads/task-tracker-app/src/pages/EditTask.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { TaskContext } from '../context/TaskContext';\r\nimport TaskForm from '../components/TaskForm';\r\n\r\nconst EditTask = () => {\r\n  const { id } = useParams();\r\n  const { tasks, updateTask } = useContext(TaskContext);\r\n  const navigate = useNavigate();\r\n\r\n  const task = tasks.find(t => t.id === id);\r\n  if (!task) return <p>Tarea no encontrada</p>;\r\n\r\n  const handleUpdate = (updatedData) => {\r\n    updateTask({ ...task, ...updatedData });\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Editar Tarea</h2>\r\n      <TaskForm initialTask={task} onSubmit={handleUpdate} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAM;IAAES,KAAK;IAAEC;EAAW,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;EACrD,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,IAAI,GAAGH,KAAK,CAACI,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACN,EAAE,KAAKA,EAAE,CAAC;EACzC,IAAI,CAACI,IAAI,EAAE,oBAAOP,OAAA;IAAAU,QAAA,EAAG;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE5C,MAAMC,YAAY,GAAIC,WAAW,IAAK;IACpCX,UAAU,CAAC;MAAE,GAAGE,IAAI;MAAE,GAAGS;IAAY,CAAC,CAAC;IACvCV,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,oBACEN,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBd,OAAA,CAACF,QAAQ;MAACmB,WAAW,EAAEV,IAAK;MAACW,QAAQ,EAAEH;IAAa;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAACZ,EAAA,CAnBID,QAAQ;EAAA,QACGN,SAAS,EAEPC,WAAW;AAAA;AAAAuB,EAAA,GAHxBlB,QAAQ;AAqBd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
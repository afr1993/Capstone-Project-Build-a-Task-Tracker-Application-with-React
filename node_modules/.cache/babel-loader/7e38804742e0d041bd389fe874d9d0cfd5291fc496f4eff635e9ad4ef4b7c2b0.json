{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afr19\\\\Downloads\\\\task-tracker-app\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { TaskContext } from '../context/TaskContext';\nimport TaskList from '../components/TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    tasks\n  } = useContext(TaskContext);\n  const [filter, setFilter] = useState('all');\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.completed;\n    if (filter === 'pending') return !task.completed;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: filter === 'all' ? 'active' : '',\n        onClick: () => setFilter('all'),\n        children: \"Todas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: filter === 'completed' ? 'active' : '',\n        onClick: () => setFilter('completed'),\n        children: \"Completadas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: filter === 'pending' ? 'active' : '',\n        onClick: () => setFilter('pending'),\n        children: \"Pendientes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: filteredTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"gbnyz1hiot1e9m4Gk4sBGvVhWNg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useContext","useState","TaskContext","TaskList","jsxDEV","_jsxDEV","Dashboard","_s","tasks","filter","setFilter","filteredTasks","task","completed","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/afr19/Downloads/task-tracker-app/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { TaskContext } from '../context/TaskContext';\r\nimport TaskList from '../components/TaskList';\r\n\r\nconst Dashboard = () => {\r\n  const { tasks } = useContext(TaskContext);\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  const filteredTasks = tasks.filter(task => {\r\n    if (filter === 'completed') return task.completed;\r\n    if (filter === 'pending') return !task.completed;\r\n    return true;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      <div className=\"filter-buttons\">\r\n        <button\r\n          className={filter === 'all' ? 'active' : ''}\r\n          onClick={() => setFilter('all')}\r\n        >\r\n          Todas\r\n        </button>\r\n        <button\r\n          className={filter === 'completed' ? 'active' : ''}\r\n          onClick={() => setFilter('completed')}\r\n        >\r\n          Completadas\r\n        </button>\r\n        <button\r\n          className={filter === 'pending' ? 'active' : ''}\r\n          onClick={() => setFilter('pending')}\r\n        >\r\n          Pendientes\r\n        </button>\r\n      </div>\r\n      <TaskList tasks={filteredTasks} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAM,CAAC,GAAGR,UAAU,CAACE,WAAW,CAAC;EACzC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMU,aAAa,GAAGH,KAAK,CAACC,MAAM,CAACG,IAAI,IAAI;IACzC,IAAIH,MAAM,KAAK,WAAW,EAAE,OAAOG,IAAI,CAACC,SAAS;IACjD,IAAIJ,MAAM,KAAK,SAAS,EAAE,OAAO,CAACG,IAAI,CAACC,SAAS;IAChD,OAAO,IAAI;EACb,CAAC,CAAC;EAEF,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBb,OAAA;MAAKc,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC7BT,OAAA;QACEc,SAAS,EAAEV,MAAM,KAAK,KAAK,GAAG,QAAQ,GAAG,EAAG;QAC5CW,OAAO,EAAEA,CAAA,KAAMV,SAAS,CAAC,KAAK,CAAE;QAAAI,QAAA,EACjC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTb,OAAA;QACEc,SAAS,EAAEV,MAAM,KAAK,WAAW,GAAG,QAAQ,GAAG,EAAG;QAClDW,OAAO,EAAEA,CAAA,KAAMV,SAAS,CAAC,WAAW,CAAE;QAAAI,QAAA,EACvC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTb,OAAA;QACEc,SAAS,EAAEV,MAAM,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAG;QAChDW,OAAO,EAAEA,CAAA,KAAMV,SAAS,CAAC,SAAS,CAAE;QAAAI,QAAA,EACrC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNb,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEG;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV,CAAC;AAACX,EAAA,CApCID,SAAS;AAAAe,EAAA,GAATf,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
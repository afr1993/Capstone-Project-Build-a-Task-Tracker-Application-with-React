{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afr19\\\\Downloads\\\\task-tracker-app\\\\src\\\\components\\\\TaskCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { TaskContext } from '../context/TaskContext';\nimport { Link } from 'react-router-dom';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCard = ({\n  task\n}) => {\n  _s();\n  const {\n    toggleComplete,\n    deleteTask\n  } = useContext(TaskContext);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const handleDelete = () => {\n    deleteTask(task.id);\n    setShowConfirm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task-card ${task.completed ? 'completed' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Due: \", task.dueDate || 'No date']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.completed,\n        onChange: () => toggleComplete(task.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), \"Completada\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/task/${task.id}`,\n        className: \"btn edit-btn\",\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn delete-btn\",\n        onClick: () => setShowConfirm(true),\n        children: \"Borrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), showConfirm && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setShowConfirm(false),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xBFEst\\xE1s seguro de borrar esta tarea?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        className: \"btn edit-btn\",\n        children: \"S\\xED, borrar \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowConfirm(false),\n        children: \"Cancelar \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCard, \"QPln0sBULi8J0k/fgUisCyXMs60=\");\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useContext","useState","TaskContext","Link","Modal","jsxDEV","_jsxDEV","TaskCard","task","_s","toggleComplete","deleteTask","showConfirm","setShowConfirm","handleDelete","id","className","completed","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","dueDate","type","checked","onChange","to","onClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/afr19/Downloads/task-tracker-app/src/components/TaskCard.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { TaskContext } from '../context/TaskContext';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from './Modal';\r\n\r\nconst TaskCard = ({ task }) => {\r\n  const { toggleComplete, deleteTask } = useContext(TaskContext);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n\r\n  const handleDelete = () => {\r\n    deleteTask(task.id);\r\n    setShowConfirm(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`task-card ${task.completed ? 'completed' : ''}`}>\r\n      <h3>{task.title}</h3>\r\n      <p>{task.description}</p>\r\n      <p>Due: {task.dueDate || 'No date'}</p>\r\n\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={task.completed}\r\n          onChange={() => toggleComplete(task.id)}\r\n        />\r\n        Completada\r\n      </label>\r\n\r\n      <div className=\"actions\">\r\n        <Link to={`/task/${task.id}`} className=\"btn edit-btn\">Editar</Link>\r\n        <button className=\"btn delete-btn\" onClick={() => setShowConfirm(true)}>Borrar</button>\r\n      </div>\r\n\r\n      {showConfirm && (\r\n        <Modal onClose={() => setShowConfirm(false)}>\r\n          <p>¿Estás seguro de borrar esta tarea?</p>\r\n          <button onClick={handleDelete} className=\"btn edit-btn\">Sí, borrar </button>\r\n          <button onClick={() => setShowConfirm(false)}>Cancelar </button>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}